diff --git a/modules/BULLET/src/CBulletGenericObject.cpp b/modules/BULLET/src/CBulletGenericObject.cpp
index d8a4562..33443f6 100644
--- a/modules/BULLET/src/CBulletGenericObject.cpp
+++ b/modules/BULLET/src/CBulletGenericObject.cpp
@@ -190,7 +190,7 @@ void cBulletGenericObject::setStatic(bool a_static)
     world.
 */
 //==============================================================================
-void cBulletGenericObject::buildDynamicModel()
+void cBulletGenericObject::buildDynamicModel(short int collisionFilterGroup, short int collisionFilterMask) 
 {
     // get mass and inertia properties
     btVector3 inertia(m_inertia(0), m_inertia(1), m_inertia(2));
@@ -205,7 +205,7 @@ void cBulletGenericObject::buildDynamicModel()
     m_bulletRigidBody->setSleepingThresholds(0, 0);
 
     // add bullet rigid body to bullet world
-    m_dynamicWorld->m_bulletWorld->addRigidBody(m_bulletRigidBody);
+    m_dynamicWorld->m_bulletWorld->addRigidBody(m_bulletRigidBody,collisionFilterGroup,collisionFilterMask);
 }
 
 
diff --git a/modules/BULLET/src/CBulletGenericObject.h b/modules/BULLET/src/CBulletGenericObject.h
index 322625d..cb5646e 100644
--- a/modules/BULLET/src/CBulletGenericObject.h
+++ b/modules/BULLET/src/CBulletGenericObject.h
@@ -146,7 +146,7 @@ public:
     virtual bool getStatic() const { return (m_static); } 
 
     //! This method builds a dynamic representation of the object in the Bullet world.
-    virtual void buildDynamicModel();
+    virtual void buildDynamicModel(short int collisionFilterGroup=btBroadphaseProxy::DefaultFilter, short int collisionFilterMask=btBroadphaseProxy::AllFilter); 
 
     //! This method updates the CHAI3D position representation from the Bullet dynamics engine.
     virtual void updatePositionFromDynamics() {}
